name: day5-scm-resourcesapi

on:
  push:
    branches:
      - master
    paths:
      - day5/apps/infrastructure/bicep/resources/**
      - day5/apps/dotnetcore/Scm.Resources/**
      - .github/workflows/day5-scm-resourcesapi.yml

  pull_request:
    branches:
      - master
    paths:
      - day5/apps/infrastructure/bicep/resources/**
      - day5/apps/dotnetcore/Scm.Resources/**
      - .github/workflows/day5-scm-resourcesapi.yml

  workflow_dispatch:

env:
  API_PACKAGE_NAME: "scmresourcesapi.zip"
  RESIZER_PACKAGE_NAME: "resizer.zip"
  BICEP_FILE_NAME: "resourcesmain.bicep"

jobs:
  build-bicep:
    if: github.repository == 'azuredevcollege/trainingdays'
    runs-on: ubuntu-latest
    env:
      BICEP_FILE_PATH: "./day5/apps/infrastructure/bicep/resources/resourcesmain.bicep"
      BICEP_MODULE_PATH: "./day5/apps/infrastructure/bicep/resources/"
      NEED_DEPLOY: ${{ (github.event_name == 'push') || (github.event_name == 'workflow_dispatch') }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Transpile bicep files
        run: az bicep build -f ${{ env.BICEP_FILE_PATH }}

      - name: Archive bicep file
        uses: actions/upload-artifact@v2
        if: env.NEED_DEPLOY == 'true'
        with:
          name: drop
          path: ${{ env.BICEP_MODULE_PATH }}
          if-no-files-found: error
          retention-days: 30

  build-api:
    if: github.repository == 'azuredevcollege/trainingdays'
    runs-on: ubuntu-latest
    env:
      API_PACKAGE_PATH: "publish/scmresourcesapi"
      API_PROJECT_PATH: "./day5/apps/dotnetcore/Scm.Resources/Adc.Scm.Resources.Api"
      NEED_DEPLOY: ${{ (github.event_name == 'push') || (github.event_name == 'workflow_dispatch') }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x

      - name: Use Cache
        uses: actions/cache@v2
        with:
          path: "~/.nuget/packages"
          key: ${{ runner.os }}-nuget-${{ hashFiles('./day5/apps/dotnetcore/Scm.Resources/Adc.Scm.Resources.Api/packages.lock.json') }}

      - name: Build and publish SCM Resources API
        working-directory: ${{ env.API_PROJECT_PATH }}
        run: |
          dotnet restore --locked-mode
          dotnet build --configuration Release
          dotnet publish -c Release -o './${{ env.API_PACKAGE_PATH }}'

      - name: Zip SCM ResourceAPI
        working-directory: ${{ env.API_PROJECT_PATH }}/${{ env.API_PACKAGE_PATH }}
        run: |
          zip -r ${{ env.API_PACKAGE_NAME }} ./*

      - name: Archive api package
        uses: actions/upload-artifact@v2
        if: env.NEED_DEPLOY == 'true'
        with:
          name: drop
          path: "${{ env.API_PROJECT_PATH }}/${{ env.API_PACKAGE_PATH }}/${{ env.API_PACKAGE_NAME }}"
          if-no-files-found: error
          retention-days: 30

  build-resizer:
    if: github.repository == 'azuredevcollege/trainingdays'
    runs-on: ubuntu-latest
    env:
      RESIZER_PACKAGE_PATH: "publish/resizer"
      RESIZER_PROJECT_PATH: "./day5/apps/dotnetcore/Scm.Resources/Adc.Scm.Resources.ImageResizer"
      NEED_DEPLOY: ${{ (github.event_name == 'push') || (github.event_name == 'workflow_dispatch') }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x

      - name: Use Cache
        uses: actions/cache@v2
        with:
          path: "~/.nuget/packages"
          key: ${{ runner.os }}-nuget-${{ hashFiles('./day5/apps/dotnetcore/Scm.Resources/Adc.Scm.Resources.ImageResizer/packages.lock.json') }}

      - name: Build and publish SCM ImageResizer
        working-directory: ${{ env.RESIZER_PROJECT_PATH }}
        run: |
          dotnet restore --locked-mode
          dotnet build --configuration Release
          dotnet publish -c Release -o './${{ env.RESIZER_PACKAGE_PATH }}'

      - name: Zip Resizer
        working-directory: ${{ env.RESIZER_PROJECT_PATH }}/${{ env.RESIZER_PACKAGE_PATH }}
        run: |
          zip -r ${{ env.RESIZER_PACKAGE_NAME }} ./*

      - name: Archive Resizer dotnetcore package artifacts
        uses: actions/upload-artifact@v2
        if: env.NEED_DEPLOY == 'true'
        with:
          name: drop
          path: "${{ env.RESIZER_PROJECT_PATH }}/${{ env.RESIZER_PACKAGE_PATH }}/${{ env.RESIZER_PACKAGE_NAME }}"
          if-no-files-found: error
          retention-days: 30

  deploy-infrastructure-to-dev:
    if: (github.repository == 'azuredevcollege/trainingdays') && ((github.event_name == 'push') || (github.event_name == 'workflow_dispatch'))
    runs-on: ubuntu-latest
    environment: day5-scm-dev
    needs: [build-bicep, build-api, build-resizer]
    outputs:
      resourceGroupName: ${{ steps.createResourceGroupName.outputs.name }}
      resourceApiWebAppName: ${{ steps.infrastructure.outputs.resourceApiWebAppName }}
      imageResizerFunctionName: ${{ steps.infrastructure.outputs.imageResizerFunctionName }}

    env:
      RESOURCE_GROUP_NAME: rg-scm-devday5
      RESOURCE_GROUP_LOCATION: westeurope
      ENV_NAME: devd5

    steps:
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x

      - name: Create ResourceGroup name
        id: createResourceGroupName
        run: echo "::set-output name=name::${{ env.RESOURCE_GROUP_NAME }}-${{ env.GITHUB_REPOSITORY_OWNER_PART }}"

      - name: Login via Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Create ResourceGroup
        run: >
          az group create
          -l ${{ env.RESOURCE_GROUP_LOCATION }}
          -n ${{ steps.createResourceGroupName.outputs.name }}

      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: drop

      - name: Deploy infrastructure to dev environment
        uses: azure/arm-deploy@v1
        id: infrastructure
        with:
          failOnStdErr: false
          resourceGroupName: ${{ steps.createResourceGroupName.outputs.name }}
          template: ./${{ env.BICEP_FILE_NAME }}
          parameters: >
            env=${{ env.ENV_NAME }}
            aadInstance=${{ secrets.AAD_INSTANCE }}
            aadTenantId=${{ secrets.AAD_TENANT_ID }}
            aadClientId=${{ secrets.AAD_API_CLIENT_ID }}
            aadDomain=${{ secrets.AAD_DOMAIN }}
            aadClientIdUri=${{ secrets.AAD_API_CLIENT_ID_URI }}

  deploy-resourceapi-to-dev:
    runs-on: ubuntu-latest
    needs: deploy-infrastructure-to-dev

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: drop

      - name: Login via Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy SCM Resources API
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ needs.deploy-infrastructure-to-dev.outputs.resourceApiWebAppName }}
          package: ./${{ env.API_PACKAGE_NAME }}

  deploy-resizer-to-dev:
    runs-on: ubuntu-latest
    needs: deploy-infrastructure-to-dev

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: drop

      - name: Login via Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy ImageResizer Function
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ needs.deploy-infrastructure-to-dev.outputs.imageResizerFunctionName }}
          package: ./${{ env.RESIZER_PACKAGE_NAME }}

      - name: Sync function triggers
        run: >
          az rest --method POST 
          --url https://management.azure.com/subscriptions/${{fromJSON(secrets.AZURE_CREDENTIALS).subscriptionId}}/resourceGroups/${{ needs.deploy-infrastructure-to-dev.outputs.resourceGroupName }}/providers/Microsoft.Web/sites/${{ needs.deploy-infrastructure-to-dev.outputs.imageResizerFunctionName }}/syncfunctiontriggers?api-version=2020-12-01

  deploy-infrastructure-to-test:
    if: (github.repository == 'azuredevcollege/trainingdays') && ((github.event_name == 'push') || (github.event_name == 'workflow_dispatch'))
    runs-on: ubuntu-latest
    environment: day5-scm-test
    needs: [deploy-resourceapi-to-dev, deploy-resizer-to-dev]
    outputs:
      resourceGroupName: ${{ steps.createResourceGroupName.outputs.name }}
      resourceApiWebAppName: ${{ steps.infrastructure.outputs.resourceApiWebAppName }}
      imageResizerFunctionName: ${{ steps.infrastructure.outputs.imageResizerFunctionName }}

    env:
      RESOURCE_GROUP_NAME: rg-scm-testday5
      RESOURCE_GROUP_LOCATION: westeurope
      ENV_NAME: testd5

    steps:
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x

      - name: Create ResourceGroup name
        id: createResourceGroupName
        run: echo "::set-output name=name::${{ env.RESOURCE_GROUP_NAME }}-${{ env.GITHUB_REPOSITORY_OWNER_PART }}"

      - name: Login via Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Create ResourceGroup
        run: >
          az group create
          -l ${{ env.RESOURCE_GROUP_LOCATION }}
          -n ${{ steps.createResourceGroupName.outputs.name }}

      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: drop

      - name: Deploy infrastructure to test environment
        uses: azure/arm-deploy@v1
        id: infrastructure
        with:
          failOnStdErr: false
          resourceGroupName: ${{ steps.createResourceGroupName.outputs.name }}
          template: ./${{ env.BICEP_FILE_NAME }}
          parameters: >
            env=${{ env.ENV_NAME }}
            aadInstance=${{ secrets.AAD_INSTANCE }}
            aadTenantId=${{ secrets.AAD_TENANT_ID }}
            aadClientId=${{ secrets.AAD_API_CLIENT_ID }}
            aadDomain=${{ secrets.AAD_DOMAIN }}
            aadClientIdUri=${{ secrets.AAD_API_CLIENT_ID_URI }}

  deploy-resourceapi-to-test:
    runs-on: ubuntu-latest
    needs: deploy-infrastructure-to-test

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: drop

      - name: Login via Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy SCM Resources API
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ needs.deploy-infrastructure-to-test.outputs.resourceApiWebAppName }}
          package: ./${{ env.API_PACKAGE_NAME }}

  deploy-resizer-to-test:
    runs-on: ubuntu-latest
    needs: deploy-infrastructure-to-test

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: drop

      - name: Login via Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy ImageResizer Function
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ needs.deploy-infrastructure-to-test.outputs.imageResizerFunctionName }}
          package: ./${{ env.RESIZER_PACKAGE_NAME }}

      - name: Sync function triggers
        run: >
          az rest --method POST 
          --url https://management.azure.com/subscriptions/${{fromJSON(secrets.AZURE_CREDENTIALS).subscriptionId}}/resourceGroups/${{ needs.deploy-infrastructure-to-test.outputs.resourceGroupName }}/providers/Microsoft.Web/sites/${{ needs.deploy-infrastructure-to-test.outputs.imageResizerFunctionName }}/syncfunctiontriggers?api-version=2020-12-01
