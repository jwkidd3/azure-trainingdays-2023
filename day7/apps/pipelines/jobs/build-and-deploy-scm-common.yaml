parameters:
  artifactDropName: terraformplan
  environmentServiceNameAzureRM: ''
  variableGroupName: ''
  aadVariableGroupName: ''
  environmentName: ADC-DAY7-SCM-DEV
  prefix: adcd7
  env: dev

jobs:
  - job: Build
    displayName: Build Scm Common / Infrstructure
    variables:
      - group: ${{ parameters.variableGroupName }}
      - group: ${{ parameters.aadVariableGroupName }}
    pool:
      vmImage: ubuntu-latest
    steps:
      - task: TerraformInstaller@0
        displayName: Install Terraform
        inputs:
          terraformVersion: '0.13.5'
      - task: TerraformTaskV1@0
        displayName: Terraform Init
        inputs:
          provider: 'azurerm'
          command: 'init'
          workingDirectory: '$(System.DefaultWorkingDirectory)/day7/terraform'
          backendServiceArm: ${{ parameters.environmentServiceNameAzureRM }}
          backendAzureRmResourceGroupName: $(tfresourcegroup)
          backendAzureRmStorageAccountName: $(tfstorageaccount)
          backendAzureRmContainerName: $(tfcontainer)
          backendAzureRmKey: $(tfstoragekey)
      - task: TerraformTaskV1@0
        displayName: Terraform Apply
        inputs:
          provider: 'azurerm'
          command: 'apply'
          workingDirectory: '$(System.DefaultWorkingDirectory)/day7/terraform'
          commandOptions: '-var="prefix=${{ parameters.prefix }}" -var="env=${{ parameters.env }}" -var="sqldbusername=$(sqlAdminUser)" -var="sqldbpassword=$(sqlAdminPassword)" -auto-approve'
          environmentServiceNameAzureRM: ${{ parameters.environmentServiceNameAzureRM }}
      - task: Kubernetes@1
        displayName: Apply Staging ClusterIssuer for cert-manager
        inputs:
          connectionType: Azure Resource Manager
          azureSubscriptionEndpoint: ${{ parameters.environmentServiceNameAzureRM }}
          azureResourceGroup: '${{ parameters.prefix }}-k8s-rg'
          kubernetesCluster: '${{ parameters.prefix }}k8s${{ parameters.env }}'
          command: apply
          arguments: -f day7/apps/infrastructure/manifests/cluster-issuer-staging.yaml
      - task: Kubernetes@1
        displayName: Apply Production ClusterIssuer for cert-manager
        inputs:
          connectionType: Azure Resource Manager
          azureSubscriptionEndpoint: ${{ parameters.environmentServiceNameAzureRM }}
          azureResourceGroup: '${{ parameters.prefix }}-k8s-rg'
          kubernetesCluster: '${{ parameters.prefix }}k8s${{ parameters.env }}'
          command: apply
          arguments: -f day7/apps/infrastructure/manifests/cluster-issuer-prod.yaml
