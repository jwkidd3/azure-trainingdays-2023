parameters:
  name: ''
  environmentName: ''
  keyVaultVariableGroupName: ''
  containerRegistry: ''
  clusterNamespace: ''
  buildNumber: ''

jobs:
  - deployment: Deploy
    displayName: ${{ parameters.name }}
    variables:
      - group: ${{ parameters.keyVaultVariableGroupName }}
    pool:
      vmImage: 'ubuntu-latest'
    environment: ${{ parameters.environmentName }}.${{ parameters.clusterNamespace }}
    strategy:
      runOnce:
        deploy:
          steps:
            - task: replacetokens@3
              displayName: Replace tokens in secrets.yaml
              inputs:
                targetFiles: $(Pipeline.Workspace)/manifests/ui-secret.yaml
                encoding: 'auto'
                writeBOM: true
                actionOnMissing: 'warn'
                keepToken: false
                tokenPrefix: '#{'
                tokenSuffix: '}#'
            - task: KubernetesManifest@0
              displayName: Create imagePullSecret
              inputs:
                action: createSecret
                secretName: regcred
                namespace: ${{ parameters.clusterNamespace }}
                dockerRegistryEndpoint: ${{ parameters.containerRegistry }}
            - task: KubernetesManifest@0
              displayName: Deploy secrets to Kubernetes cluster
              inputs:
                action: deploy
                namespace: ${{ parameters.clusterNamespace }}
                manifests: |
                  $(Pipeline.Workspace)/manifests/ui-secret.yaml
            - task: replacetokens@3
              displayName: Replace tokens in ingress file
              inputs:
                targetFiles: $(Pipeline.Workspace)/manifests/scmfe-ingress.yaml
                encoding: 'auto'
                writeBOM: true
                actionOnMissing: 'warn'
                keepToken: false
                tokenPrefix: '#{'
                tokenSuffix: '}#'
            - task: KubernetesManifest@0
              displayName: Deploy to Kubernetes cluster
              inputs:
                action: deploy
                namespace: ${{ parameters.clusterNamespace }}
                manifests: |
                  $(Pipeline.Workspace)/manifests/scmfe-deployment.yaml
                  $(Pipeline.Workspace)/manifests/scmfe-ingress.yaml
                  $(Pipeline.Workspace)/manifests/scmfe-svc.yaml
                imagePullSecrets: |
                  regcred
                containers: |
                  azuredevcollege.azurecr.io/adcd7/scmfe:${{ parameters.buildNumber }}
